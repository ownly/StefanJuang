|mem
key[0] => idle_count_flag.OUTPUTSELECT
key[0] => state_count_flag.OUTPUTSELECT
key[0] => data_count_flag.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => idle_count.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => data.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => state_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => data_count.OUTPUTSELECT
key[0] => bitcount.OUTPUTSELECT
key[0] => bitcount.OUTPUTSELECT
key[0] => bitcount.OUTPUTSELECT
key[0] => bitcount.OUTPUTSELECT
key[0] => bitcount.OUTPUTSELECT
key[0] => bitcount.OUTPUTSELECT
key[0] => state.OUTPUTSELECT
key[0] => state.OUTPUTSELECT
key[0] => state.OUTPUTSELECT
key[0] => ready.OUTPUTSELECT
key[0] => odata.OUTPUTSELECT
key[0] => odata.OUTPUTSELECT
key[0] => odata.OUTPUTSELECT
key[0] => odata.OUTPUTSELECT
key[0] => odata.OUTPUTSELECT
key[0] => odata.OUTPUTSELECT
key[0] => odata.OUTPUTSELECT
key[0] => odata.OUTPUTSELECT
key[0] => data_buf[23].ENA
key[0] => data_buf[22].ENA
key[0] => data_buf[21].ENA
key[0] => data_buf[20].ENA
key[0] => data_buf[19].ENA
key[0] => data_buf[18].ENA
key[0] => data_buf[17].ENA
key[0] => data_buf[16].ENA
IRDA_RXD => process_5.IN0
IRDA_RXD => process_7.IN0
IRDA_RXD => process_3.IN0
GPIO[3] <> GPIO[3]
GPIO[2] <> GPIO[2]
GPIO[1] <> GPIO[1]
GPIO[0] <> GPIO[0]
HEX5[6] <= HEX5.DB_MAX_OUTPUT_PORT_TYPE
HEX5[5] <= HEX5.DB_MAX_OUTPUT_PORT_TYPE
HEX5[4] <= <GND>
HEX5[3] <= HEX5.DB_MAX_OUTPUT_PORT_TYPE
HEX5[2] <= HEX5.DB_MAX_OUTPUT_PORT_TYPE
HEX5[1] <= HEX5.DB_MAX_OUTPUT_PORT_TYPE
HEX5[0] <= HEX5.DB_MAX_OUTPUT_PORT_TYPE
HEX7[6] <= HEX7.DB_MAX_OUTPUT_PORT_TYPE
HEX7[5] <= HEX7.DB_MAX_OUTPUT_PORT_TYPE
HEX7[4] <= HEX7.DB_MAX_OUTPUT_PORT_TYPE
HEX7[3] <= HEX7.DB_MAX_OUTPUT_PORT_TYPE
HEX7[2] <= HEX7.DB_MAX_OUTPUT_PORT_TYPE
HEX7[1] <= HEX7.DB_MAX_OUTPUT_PORT_TYPE
HEX7[0] <= HEX7.DB_MAX_OUTPUT_PORT_TYPE
HEX3[6] <= HEX3.DB_MAX_OUTPUT_PORT_TYPE
HEX3[5] <= HEX3.DB_MAX_OUTPUT_PORT_TYPE
HEX3[4] <= HEX3.DB_MAX_OUTPUT_PORT_TYPE
HEX3[3] <= HEX3.DB_MAX_OUTPUT_PORT_TYPE
HEX3[2] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
HEX3[1] <= <VCC>
HEX3[0] <= <VCC>
HEX1[6] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
HEX1[5] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
HEX1[4] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
HEX1[3] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
HEX1[2] <= <VCC>
HEX1[1] <= <VCC>
HEX1[0] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] <= HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] <= HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] <= HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[3] <= HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[2] <= <VCC>
HEX2[1] <= <VCC>
HEX2[0] <= <VCC>
HEX4[6] <= <GND>
HEX4[5] <= <GND>
HEX4[4] <= <GND>
HEX4[3] <= HEX4.DB_MAX_OUTPUT_PORT_TYPE
HEX4[2] <= HEX4.DB_MAX_OUTPUT_PORT_TYPE
HEX4[1] <= HEX4.DB_MAX_OUTPUT_PORT_TYPE
HEX4[0] <= HEX4.DB_MAX_OUTPUT_PORT_TYPE
HEX6[6] <= HEX6.DB_MAX_OUTPUT_PORT_TYPE
HEX6[5] <= HEX6.DB_MAX_OUTPUT_PORT_TYPE
HEX6[4] <= HEX6.DB_MAX_OUTPUT_PORT_TYPE
HEX6[3] <= HEX6.DB_MAX_OUTPUT_PORT_TYPE
HEX6[2] <= HEX6.DB_MAX_OUTPUT_PORT_TYPE
HEX6[1] <= HEX6.DB_MAX_OUTPUT_PORT_TYPE
HEX6[0] <= HEX6.DB_MAX_OUTPUT_PORT_TYPE
clock_50 => altera_UP_sram:mem1.clk
clock_50 => odata[16].CLK
clock_50 => odata[17].CLK
clock_50 => odata[18].CLK
clock_50 => odata[19].CLK
clock_50 => odata[20].CLK
clock_50 => odata[21].CLK
clock_50 => odata[22].CLK
clock_50 => odata[23].CLK
clock_50 => data_buf[16].CLK
clock_50 => data_buf[17].CLK
clock_50 => data_buf[18].CLK
clock_50 => data_buf[19].CLK
clock_50 => data_buf[20].CLK
clock_50 => data_buf[21].CLK
clock_50 => data_buf[22].CLK
clock_50 => data_buf[23].CLK
clock_50 => ready.CLK
clock_50 => data[16].CLK
clock_50 => data[17].CLK
clock_50 => data[18].CLK
clock_50 => data[19].CLK
clock_50 => data[20].CLK
clock_50 => data[21].CLK
clock_50 => data[22].CLK
clock_50 => data[23].CLK
clock_50 => data[24].CLK
clock_50 => data[25].CLK
clock_50 => data[26].CLK
clock_50 => data[27].CLK
clock_50 => data[28].CLK
clock_50 => data[29].CLK
clock_50 => data[30].CLK
clock_50 => data[31].CLK
clock_50 => bitcount[0].CLK
clock_50 => bitcount[1].CLK
clock_50 => bitcount[2].CLK
clock_50 => bitcount[3].CLK
clock_50 => bitcount[4].CLK
clock_50 => bitcount[5].CLK
clock_50 => data_count_flag.CLK
clock_50 => data_count[0].CLK
clock_50 => data_count[1].CLK
clock_50 => data_count[2].CLK
clock_50 => data_count[3].CLK
clock_50 => data_count[4].CLK
clock_50 => data_count[5].CLK
clock_50 => data_count[6].CLK
clock_50 => data_count[7].CLK
clock_50 => data_count[8].CLK
clock_50 => data_count[9].CLK
clock_50 => data_count[10].CLK
clock_50 => data_count[11].CLK
clock_50 => data_count[12].CLK
clock_50 => data_count[13].CLK
clock_50 => data_count[14].CLK
clock_50 => data_count[15].CLK
clock_50 => data_count[16].CLK
clock_50 => data_count[17].CLK
clock_50 => data_count[18].CLK
clock_50 => state_count_flag.CLK
clock_50 => state_count[0].CLK
clock_50 => state_count[1].CLK
clock_50 => state_count[2].CLK
clock_50 => state_count[3].CLK
clock_50 => state_count[4].CLK
clock_50 => state_count[5].CLK
clock_50 => state_count[6].CLK
clock_50 => state_count[7].CLK
clock_50 => state_count[8].CLK
clock_50 => state_count[9].CLK
clock_50 => state_count[10].CLK
clock_50 => state_count[11].CLK
clock_50 => state_count[12].CLK
clock_50 => state_count[13].CLK
clock_50 => state_count[14].CLK
clock_50 => state_count[15].CLK
clock_50 => state_count[16].CLK
clock_50 => state_count[17].CLK
clock_50 => state_count[18].CLK
clock_50 => idle_count_flag.CLK
clock_50 => idle_count[0].CLK
clock_50 => idle_count[1].CLK
clock_50 => idle_count[2].CLK
clock_50 => idle_count[3].CLK
clock_50 => idle_count[4].CLK
clock_50 => idle_count[5].CLK
clock_50 => idle_count[6].CLK
clock_50 => idle_count[7].CLK
clock_50 => idle_count[8].CLK
clock_50 => idle_count[9].CLK
clock_50 => idle_count[10].CLK
clock_50 => idle_count[11].CLK
clock_50 => idle_count[12].CLK
clock_50 => idle_count[13].CLK
clock_50 => idle_count[14].CLK
clock_50 => idle_count[15].CLK
clock_50 => idle_count[16].CLK
clock_50 => idle_count[17].CLK
clock_50 => idle_count[18].CLK
clock_50 => check[0].CLK
clock_50 => check[1].CLK
clock_50 => check[2].CLK
clock_50 => check[3].CLK
clock_50 => check[4].CLK
clock_50 => check[5].CLK
clock_50 => check[6].CLK
clock_50 => check[7].CLK
clock_50 => check[8].CLK
clock_50 => check[9].CLK
clock_50 => check[10].CLK
clock_50 => check[11].CLK
clock_50 => check[12].CLK
clock_50 => check[13].CLK
clock_50 => check[14].CLK
clock_50 => check[15].CLK
clock_50 => check[16].CLK
clock_50 => check[17].CLK
clock_50 => check[18].CLK
clock_50 => check[19].CLK
clock_50 => ledg[0]~reg0.CLK
clock_50 => ledg[1]~reg0.CLK
clock_50 => ledg[2]~reg0.CLK
clock_50 => ledg[3]~reg0.CLK
clock_50 => re_turnit.CLK
clock_50 => playit.CLK
clock_50 => rememberit.CLK
clock_50 => instruction[0].CLK
clock_50 => instruction[1].CLK
clock_50 => instruction[2].CLK
clock_50 => instruction[3].CLK
clock_50 => instruction[4].CLK
clock_50 => instruction[5].CLK
clock_50 => instruction[6].CLK
clock_50 => instruction[7].CLK
clock_50 => instruction[8].CLK
clock_50 => instruction[9].CLK
clock_50 => instruction[10].CLK
clock_50 => instruction[11].CLK
clock_50 => instruction[12].CLK
clock_50 => instruction[13].CLK
clock_50 => instruction[14].CLK
clock_50 => instruction[15].CLK
clock_50 => instruction[16].CLK
clock_50 => instruction[17].CLK
clock_50 => instruction[18].CLK
clock_50 => instruction[19].CLK
clock_50 => counter[0].CLK
clock_50 => counter[1].CLK
clock_50 => counter[2].CLK
clock_50 => counter[3].CLK
clock_50 => counter[4].CLK
clock_50 => counter[5].CLK
clock_50 => counter[6].CLK
clock_50 => counter[7].CLK
clock_50 => counter[8].CLK
clock_50 => counter[9].CLK
clock_50 => counter[10].CLK
clock_50 => counter[11].CLK
clock_50 => counter[12].CLK
clock_50 => counter[13].CLK
clock_50 => counter[14].CLK
clock_50 => counter[15].CLK
clock_50 => counter[16].CLK
clock_50 => counter[17].CLK
clock_50 => counter[18].CLK
clock_50 => counter[19].CLK
clock_50 => counter[20].CLK
clock_50 => counter[21].CLK
clock_50 => counter[22].CLK
clock_50 => counter[23].CLK
clock_50 => state~1.DATAIN
sram_addr[0] <= altera_UP_sram:mem1.SRAM_ADDR[0]
sram_addr[1] <= altera_UP_sram:mem1.SRAM_ADDR[1]
sram_addr[2] <= altera_UP_sram:mem1.SRAM_ADDR[2]
sram_addr[3] <= altera_UP_sram:mem1.SRAM_ADDR[3]
sram_addr[4] <= altera_UP_sram:mem1.SRAM_ADDR[4]
sram_addr[5] <= altera_UP_sram:mem1.SRAM_ADDR[5]
sram_addr[6] <= altera_UP_sram:mem1.SRAM_ADDR[6]
sram_addr[7] <= altera_UP_sram:mem1.SRAM_ADDR[7]
sram_addr[8] <= altera_UP_sram:mem1.SRAM_ADDR[8]
sram_addr[9] <= altera_UP_sram:mem1.SRAM_ADDR[9]
sram_addr[10] <= altera_UP_sram:mem1.SRAM_ADDR[10]
sram_addr[11] <= altera_UP_sram:mem1.SRAM_ADDR[11]
sram_addr[12] <= altera_UP_sram:mem1.SRAM_ADDR[12]
sram_addr[13] <= altera_UP_sram:mem1.SRAM_ADDR[13]
sram_addr[14] <= altera_UP_sram:mem1.SRAM_ADDR[14]
sram_addr[15] <= altera_UP_sram:mem1.SRAM_ADDR[15]
sram_addr[16] <= altera_UP_sram:mem1.SRAM_ADDR[16]
sram_addr[17] <= altera_UP_sram:mem1.SRAM_ADDR[17]
sram_addr[18] <= altera_UP_sram:mem1.SRAM_ADDR[18]
sram_addr[19] <= altera_UP_sram:mem1.SRAM_ADDR[19]
sram_dq[0] <> altera_UP_sram:mem1.SRAM_DQ[0]
sram_dq[1] <> altera_UP_sram:mem1.SRAM_DQ[1]
sram_dq[2] <> altera_UP_sram:mem1.SRAM_DQ[2]
sram_dq[3] <> altera_UP_sram:mem1.SRAM_DQ[3]
sram_dq[4] <> altera_UP_sram:mem1.SRAM_DQ[4]
sram_dq[5] <> altera_UP_sram:mem1.SRAM_DQ[5]
sram_dq[6] <> altera_UP_sram:mem1.SRAM_DQ[6]
sram_dq[7] <> altera_UP_sram:mem1.SRAM_DQ[7]
sram_dq[8] <> altera_UP_sram:mem1.SRAM_DQ[8]
sram_dq[9] <> altera_UP_sram:mem1.SRAM_DQ[9]
sram_dq[10] <> altera_UP_sram:mem1.SRAM_DQ[10]
sram_dq[11] <> altera_UP_sram:mem1.SRAM_DQ[11]
sram_dq[12] <> altera_UP_sram:mem1.SRAM_DQ[12]
sram_dq[13] <> altera_UP_sram:mem1.SRAM_DQ[13]
sram_dq[14] <> altera_UP_sram:mem1.SRAM_DQ[14]
sram_dq[15] <> altera_UP_sram:mem1.SRAM_DQ[15]
sraM_OE_N << altera_UP_sram:mem1.SRAM_OE_N
sraM_WE_N << altera_UP_sram:mem1.SRAM_WE_N
sraM_CE_N << altera_UP_sram:mem1.SRAM_CE_N
sraM_LB_N << altera_UP_sram:mem1.SRAM_LB_N
sraM_UB_N << altera_UP_sram:mem1.SRAM_UB_N
ledg[0] <= ledg[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ledg[1] <= ledg[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ledg[2] <= ledg[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ledg[3] <= ledg[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ledg[4] <= <GND>
ledg[5] <= <GND>
ledg[6] <= <GND>
ledg[7] <= <GND>


|mem|altera_UP_sram:mem1
clk => writedata_reg[0].CLK
clk => writedata_reg[1].CLK
clk => writedata_reg[2].CLK
clk => writedata_reg[3].CLK
clk => writedata_reg[4].CLK
clk => writedata_reg[5].CLK
clk => writedata_reg[6].CLK
clk => writedata_reg[7].CLK
clk => writedata_reg[8].CLK
clk => writedata_reg[9].CLK
clk => writedata_reg[10].CLK
clk => writedata_reg[11].CLK
clk => writedata_reg[12].CLK
clk => writedata_reg[13].CLK
clk => writedata_reg[14].CLK
clk => writedata_reg[15].CLK
clk => is_write.CLK
clk => is_read.CLK
clk => SRAM_WE_N~reg0.CLK
clk => SRAM_OE_N~reg0.CLK
clk => SRAM_CE_N~reg0.CLK
clk => SRAM_UB_N~reg0.CLK
clk => SRAM_LB_N~reg0.CLK
clk => SRAM_ADDR[0]~reg0.CLK
clk => SRAM_ADDR[1]~reg0.CLK
clk => SRAM_ADDR[2]~reg0.CLK
clk => SRAM_ADDR[3]~reg0.CLK
clk => SRAM_ADDR[4]~reg0.CLK
clk => SRAM_ADDR[5]~reg0.CLK
clk => SRAM_ADDR[6]~reg0.CLK
clk => SRAM_ADDR[7]~reg0.CLK
clk => SRAM_ADDR[8]~reg0.CLK
clk => SRAM_ADDR[9]~reg0.CLK
clk => SRAM_ADDR[10]~reg0.CLK
clk => SRAM_ADDR[11]~reg0.CLK
clk => SRAM_ADDR[12]~reg0.CLK
clk => SRAM_ADDR[13]~reg0.CLK
clk => SRAM_ADDR[14]~reg0.CLK
clk => SRAM_ADDR[15]~reg0.CLK
clk => SRAM_ADDR[16]~reg0.CLK
clk => SRAM_ADDR[17]~reg0.CLK
clk => SRAM_ADDR[18]~reg0.CLK
clk => SRAM_ADDR[19]~reg0.CLK
clk => readdatavalid~reg0.CLK
clk => readdata[0]~reg0.CLK
clk => readdata[1]~reg0.CLK
clk => readdata[2]~reg0.CLK
clk => readdata[3]~reg0.CLK
clk => readdata[4]~reg0.CLK
clk => readdata[5]~reg0.CLK
clk => readdata[6]~reg0.CLK
clk => readdata[7]~reg0.CLK
clk => readdata[8]~reg0.CLK
clk => readdata[9]~reg0.CLK
clk => readdata[10]~reg0.CLK
clk => readdata[11]~reg0.CLK
clk => readdata[12]~reg0.CLK
clk => readdata[13]~reg0.CLK
clk => readdata[14]~reg0.CLK
clk => readdata[15]~reg0.CLK
address[0] => SRAM_ADDR[0]~reg0.DATAIN
address[1] => SRAM_ADDR[1]~reg0.DATAIN
address[2] => SRAM_ADDR[2]~reg0.DATAIN
address[3] => SRAM_ADDR[3]~reg0.DATAIN
address[4] => SRAM_ADDR[4]~reg0.DATAIN
address[5] => SRAM_ADDR[5]~reg0.DATAIN
address[6] => SRAM_ADDR[6]~reg0.DATAIN
address[7] => SRAM_ADDR[7]~reg0.DATAIN
address[8] => SRAM_ADDR[8]~reg0.DATAIN
address[9] => SRAM_ADDR[9]~reg0.DATAIN
address[10] => SRAM_ADDR[10]~reg0.DATAIN
address[11] => SRAM_ADDR[11]~reg0.DATAIN
address[12] => SRAM_ADDR[12]~reg0.DATAIN
address[13] => SRAM_ADDR[13]~reg0.DATAIN
address[14] => SRAM_ADDR[14]~reg0.DATAIN
address[15] => SRAM_ADDR[15]~reg0.DATAIN
address[16] => SRAM_ADDR[16]~reg0.DATAIN
address[17] => SRAM_ADDR[17]~reg0.DATAIN
address[18] => SRAM_ADDR[18]~reg0.DATAIN
address[19] => SRAM_ADDR[19]~reg0.DATAIN
byteenable[0] => SRAM_LB_N.IN1
byteenable[1] => SRAM_UB_N.IN1
read => SRAM_LB_N.IN0
read => is_read.DATAIN
read => SRAM_OE_N~reg0.DATAIN
write => SRAM_LB_N.IN1
write => is_write.DATAIN
write => SRAM_WE_N~reg0.DATAIN
writedata[0] => writedata_reg[0].DATAIN
writedata[1] => writedata_reg[1].DATAIN
writedata[2] => writedata_reg[2].DATAIN
writedata[3] => writedata_reg[3].DATAIN
writedata[4] => writedata_reg[4].DATAIN
writedata[5] => writedata_reg[5].DATAIN
writedata[6] => writedata_reg[6].DATAIN
writedata[7] => writedata_reg[7].DATAIN
writedata[8] => writedata_reg[8].DATAIN
writedata[9] => writedata_reg[9].DATAIN
writedata[10] => writedata_reg[10].DATAIN
writedata[11] => writedata_reg[11].DATAIN
writedata[12] => writedata_reg[12].DATAIN
writedata[13] => writedata_reg[13].DATAIN
writedata[14] => writedata_reg[14].DATAIN
writedata[15] => writedata_reg[15].DATAIN
SRAM_DQ[0] <> SRAM_DQ[0]
SRAM_DQ[1] <> SRAM_DQ[1]
SRAM_DQ[2] <> SRAM_DQ[2]
SRAM_DQ[3] <> SRAM_DQ[3]
SRAM_DQ[4] <> SRAM_DQ[4]
SRAM_DQ[5] <> SRAM_DQ[5]
SRAM_DQ[6] <> SRAM_DQ[6]
SRAM_DQ[7] <> SRAM_DQ[7]
SRAM_DQ[8] <> SRAM_DQ[8]
SRAM_DQ[9] <> SRAM_DQ[9]
SRAM_DQ[10] <> SRAM_DQ[10]
SRAM_DQ[11] <> SRAM_DQ[11]
SRAM_DQ[12] <> SRAM_DQ[12]
SRAM_DQ[13] <> SRAM_DQ[13]
SRAM_DQ[14] <> SRAM_DQ[14]
SRAM_DQ[15] <> SRAM_DQ[15]
readdata[0] <= readdata[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[1] <= readdata[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[2] <= readdata[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[3] <= readdata[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[4] <= readdata[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[5] <= readdata[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[6] <= readdata[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[7] <= readdata[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[8] <= readdata[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[9] <= readdata[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[10] <= readdata[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[11] <= readdata[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[12] <= readdata[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[13] <= readdata[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[14] <= readdata[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdata[15] <= readdata[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readdatavalid <= readdatavalid~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[0] <= SRAM_ADDR[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[1] <= SRAM_ADDR[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[2] <= SRAM_ADDR[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[3] <= SRAM_ADDR[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[4] <= SRAM_ADDR[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[5] <= SRAM_ADDR[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[6] <= SRAM_ADDR[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[7] <= SRAM_ADDR[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[8] <= SRAM_ADDR[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[9] <= SRAM_ADDR[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[10] <= SRAM_ADDR[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[11] <= SRAM_ADDR[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[12] <= SRAM_ADDR[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[13] <= SRAM_ADDR[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[14] <= SRAM_ADDR[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[15] <= SRAM_ADDR[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[16] <= SRAM_ADDR[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[17] <= SRAM_ADDR[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[18] <= SRAM_ADDR[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[19] <= SRAM_ADDR[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_LB_N <= SRAM_LB_N~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_UB_N <= SRAM_UB_N~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_CE_N <= SRAM_CE_N~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_OE_N <= SRAM_OE_N~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_WE_N <= SRAM_WE_N~reg0.DB_MAX_OUTPUT_PORT_TYPE


